{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SACjBD,SAASC,cAAc,gBACxBD,SAASC,cAAc,eACrBD,SAASC,cAAc,iBAE3CF,EAAKG,iBAAiB,UAEtB,SAAsBC,G,kBASlBC,YAAW,WAoBf,IAAuBC,EAAUC,GAAVD,EAnBHE,EAmBaD,EAnBVE,EAoBd,IAAIC,SAAQ,SAACC,EAASC,GAELC,KAAKC,SAAW,GAGpCH,EAAQ,CAACL,WAAUC,UAGnBK,EAAO,CAACN,WAAUC,S,KA3BfQ,MAAK,SAAAC,GAAWA,EAARV,S,IAAUC,EAAKS,EAALT,MAChBU,EAAAnB,GAASoB,OAAOC,QACjB,uBAAiCC,OAARZ,EAAE,QAAYY,OAANb,EAAM,M,IAGxCc,OAAM,SAAAL,GAAWA,EAARV,S,IAAUC,EAAKS,EAALT,MACjBU,EAAAnB,GAASoB,OAAOI,QACjB,sBAA8BF,OAARZ,EAAE,QAAYY,OAANb,EAAM,M,MAGvCE,GAGHA,GAAac,OAAOC,EAAKC,M,EAvB3BrB,EAAMsB,iBAMN,IALA,IAEuBC,EAAnBvB,EAAMwB,cADRC,SAAYC,EAAKH,EAALpB,MAAOiB,EAAIG,EAAJH,KAAMO,EAAMJ,EAANI,OAGvBtB,EAAac,OAAOO,EAAML,OACrBO,EAAI,EAAGA,GAAKD,EAAON,MAAOO,GAAK,EAACC,EAAAD,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nconst firstDelay = document.querySelector('[name=delay]');\nconst delayStep = document.querySelector('[name=step]');\nconst amountDelay = document.querySelector('[name=amount]');\n\nform.addEventListener(\"submit\", handleSubmit);\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n  const {\n    elements: { delay, step, amount }\n  } = event.currentTarget;\n  // console.log(delay.value, step.value, amount.value);\n  let delayValue = Number(delay.value);\n  for (let i = 1; i <= amount.value; i += 1){\n   \n    setTimeout(() => {\n      createPromise(i, delayValue)\n        .then(({ position, delay }) => {\n           Notiflix.Notify.success(\n          `✅ Fulfilled promise ${i} in ${delay}ms`\n        );\n        })\n        .catch(({ position, delay }) => {\n           Notiflix.Notify.failure(\n          `❌ Rejected promise ${i} in ${delay}ms`\n        );\n        });\n    }, delayValue);\n\n    // console.log(delayValue);\n    delayValue +=Number(step.value);\n  };\n};\n\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n   \n    const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      // Fulfill\n      resolve({position, delay})\n    } else {\n      // Reject\n      reject({position, delay})\n    }\n  });\n}\n "],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","addEventListener","event","setTimeout","position","delay","i","delayValue","Promise","resolve","reject","Math","random","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","Number","step","value","preventDefault","_elements","currentTarget","elements","delay1","amount","i1","_loop"],"version":3,"file":"03-promises.1fb5951c.js.map"}